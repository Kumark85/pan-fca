---

- name: "ADD/REMOVE NAT RULE"
  panos_nat_rule:
    ip_address: '{{ ansible_host }}'
    username: '{{ username }}'
    password: '{{ password }}'
    rule_name: "{{ item['name'] }}"
    state: "{{ item['state'] | default('present') }}"
    source_zone: "{{ item['source']['zone'] }}"
    destination_zone: "{{ item['destination']['zone'] }}"
    source_ip: "{{ item['source']['network'] }}"
    destination_ip: "{{ item['destination']['network'] }}"
    service: "{{ item['service'] | default(omit) }}"
    snat_type: "{{ item['snat_type'] | default(omit) }}"
    snat_interface_address: "{{ ((item['snat_translation'] | default(omit))['ip']) | default(omit) }}"
    snat_address_type: "{{ item['snat_address_type'] | default(omit) }}"
    snat_interface: "{{ ((item['snat_translation'] | default(omit))['interface']) | default(omit) }}"
    dnat_address: "{{ ((item['dnat_translation'] | default(omit))['ip']) | default(omit) }}"
    dnat_port: "{{ ((item['dnat_translation'] | default(omit))['port']) | default(omit) }}"
    #dnat_type: "{{ item['dnat_type'] | default(omit) }}"
  with_items: "{{ cm_nat_rule | list }}"
  #ignore_errors: true
  when: "cm_nat_rule is defined"

- name: "FIND POLICY ON THE DEVICE"
  panos_security_rule:
    ip_address: '{{ ansible_host }}'
    username: '{{ username }}'
    password: "{{ password }}"
    rule_name: "{{ item['name'] }}"
    operation: "find"
  with_items: "{{ cm_security_rule }}"
  register: "find_srule"
  ignore_errors: true
  when: "cm_security_rule is defined"

- name: "PUSH THE POLICY TO THE DEVICE IF NOT THERE"
  panos_security_rule:
    ip_address: '{{ ansible_host }}'
    username: '{{ username }}'
    password: "{{ password }}"
    operation: "add"
    rule_name: "{{ item['item']['name'] }}"
    rule_type: "{{ item['item']['rule_type'] | default('universal') }}"
    description: "{{ item['item']['description'] | default(omit) }}"
    source_zone: "{{ item['item']['from_zone'] }}"
    destination_zone: "{{ item['item']['to_zone'] }}"
    source_ip: "{{ item['item']['source'] }}"
    # source_user: ['any']
    destination_ip: "{{ item['item']['destination'] }}"
    category: "{{ item['item']['category'] | default(['any']) }}"
    application: "{{ item['item']['application'] }}"
    service: "{{ item['item']['service'] }}"
    hip_profiles: "{{ item['item']['hip_profiles'] | default(['any']) }}"
    action: 'allow'
    commit: false
  with_items: "{{ find_srule['results'] | selectattr('failed', 'equalto', true) | list }}"
  when: "cm_security_rule is defined"

- name: "PUSH THE POLICY TO THE DEVICE IF ALREADY THERE"
  panos_security_rule:
    ip_address: '{{ ansible_host }}'
    username: '{{ username }}'
    password: "{{ password }}"
    operation: "update"
    rule_name: "{{ item['item']['name'] }}"
    rule_type: "{{ item['item']['rule_type'] | default('universal') }}"
    description: "{{ item['item']['description'] | default(omit) }}"
    source_zone: "{{ item['item']['from_zone'] }}"
    destination_zone: "{{ item['item']['to_zone'] }}"
    source_ip: "{{ item['item']['source'] }}"
    # source_user: ['any']
    destination_ip: "{{ item['item']['destination'] }}"
    category: "{{ item['item']['category'] | default(['any']) }}"
    application: "{{ item['item']['application'] }}"
    service: "{{ item['item']['service'] }}"
    hip_profiles: "{{ item['item']['hip_profiles'] | default(['any']) }}"
    action: 'allow'
    commit: false
  with_items: "{{ find_srule['results'] | selectattr('failed', 'equalto', false) | list }}"
  when: "cm_security_rule is defined"